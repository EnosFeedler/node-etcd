// Generated by CoffeeScript 1.6.1
(function() {
  var EventEmitter, Watcher, exports,
    _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Watcher = (function(_super) {

    __extends(Watcher, _super);

    function Watcher(etcd, key, index) {
      var _this = this;
      this.etcd = etcd;
      this.key = key;
      this.index = index != null ? index : null;
      this._retry = function() {
        return Watcher.prototype._retry.apply(_this, arguments);
      };
      this._respHandler = function(err, val) {
        return Watcher.prototype._respHandler.apply(_this, arguments);
      };
      this._watch = function() {
        return Watcher.prototype._watch.apply(_this, arguments);
      };
      this.retryAttempts = 0;
      this._watch();
    }

    Watcher.prototype._watch = function() {
      if (this.index === null) {
        return this.etcd.watch(this.key, this._respHandler);
      } else {
        return this.etcd.watchIndex(this.key, this.index, this._respHandler);
      }
    };

    Watcher.prototype._respHandler = function(err, val) {
      if ((val != null ? val.index : void 0) != null) {
        this.retryAttempts = 0;
        this.index = val.index + 1;
        this.emit('change', val);
        this._watch();
      }
      if (err !== null) {
        this.emit('reconnect', {
          error: err,
          reconnectcount: this.retryAttempts
        });
        return this._retry();
      }
    };

    Watcher.prototype._retry = function() {
      setTimeout(this._watch, 500 * this.retryAttempts);
      return this.retryAttempts++;
    };

    return Watcher;

  })(EventEmitter);

  exports = module.exports = Watcher;

}).call(this);
